{"ast":null,"code":"var _jsxFileName = \"/var/www/html/reactjs/test_projects/streaming/src/Components/Playvideo.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Playvideo(props) {\n  _s();\n\n  useEffect(() => {\n    props.dispatch({\n      type: \"GET_PLAY_VIDEO\",\n      payload: props.match.params.id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"play-video-page-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      width: \"400\",\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: props.getPlayVideo,\n        type: \"video/mkv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), \"Your browser does not support HTML video.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      controls: true,\n      muted: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"http://localhost:5000/api/playvideo?filename=+{props.match.params.id}\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Playvideo, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Playvideo;\nPlayvideo = withRouter(Playvideo);\nexport default connect(function (state, action) {\n  return {\n    getPlayVideo: state === null || state === void 0 ? void 0 : state.video\n  };\n})(Playvideo);\n\nvar _c;\n\n$RefreshReg$(_c, \"Playvideo\");","map":{"version":3,"sources":["/var/www/html/reactjs/test_projects/streaming/src/Components/Playvideo.js"],"names":["useEffect","useState","connect","withRouter","ReactPlayer","Playvideo","props","dispatch","type","payload","match","params","id","getPlayVideo","state","action","video"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxBN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,gBADO;AAEbC,MAAAA,OAAO,EAAEH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC;AAFf,KAAf;AAID,GALQ,EAKN,EALM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,4BACE;AAAO,MAAA,KAAK,EAAC,KAAb;AAAmB,MAAA,QAAQ,MAA3B;AAAA,8BACE;AAAQ,QAAA,GAAG,EAAEN,KAAK,CAACO,YAAnB;AAAiC,QAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,KAAK,MAArB;AAAA,6BACI;AAAQ,QAAA,GAAG,EAAC,uEAAZ;AAAoF,QAAA,IAAI,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAlBQR,S;;KAAAA,S;AAmBTA,SAAS,GAAGF,UAAU,CAACE,SAAD,CAAtB;AACA,eAAeH,OAAO,CAAC,UAAUY,KAAV,EAAiBC,MAAjB,EAAyB;AAC9C,SAAO;AACLF,IAAAA,YAAY,EAAEC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEE;AADhB,GAAP;AAGD,CAJqB,CAAP,CAIZX,SAJY,CAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\";\n\nfunction Playvideo(props) {\n  useEffect(() => {\n    props.dispatch({\n      type: \"GET_PLAY_VIDEO\",\n      payload: props.match.params.id,\n    });\n  }, []);\n  return (\n    <div className=\"play-video-page-component\">\n      <video width=\"400\" controls>\n        <source src={props.getPlayVideo} type=\"video/mkv\" />\n        Your browser does not support HTML video.\n      </video>\n      <video controls muted>\n          <source src=\"http://localhost:5000/api/playvideo?filename=+{props.match.params.id}\" type=\"video/mp4\"></source>\n      </video>\n    </div>\n  );\n}\nPlayvideo = withRouter(Playvideo);\nexport default connect(function (state, action) {\n  return {\n    getPlayVideo: state?.video,\n  };\n})(Playvideo);\n"]},"metadata":{},"sourceType":"module"}